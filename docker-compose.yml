version: '3'
services:

  discovery1:
    image: tasiraki77/service-discovery
    container_name: discovery1
    build:
      context: ./containerized-discovery
      dockerfile: Dockerfile
    environment:
      - HOST_NAME=discovery1
      - PORT=3001
      - ZONE=http://discovery2:3002/eureka/
      - JAEGER_HTTP_URL=http://jaeger:14268/api/traces
    ports:
      - "3001:3001"

  discovery2:
    image: tasiraki77/service-discovery
    container_name: discovery2
    environment:
      - HOST_NAME=discovery2
      - PORT=3002
      - ZONE=http://discovery1:3001/eureka/
      - JAEGER_HTTP_URL=http://jaeger:14268/api/traces
    ports:
      - "3002:3002"

  scgateway:
    image: tasiraki77/service-scgateway
    container_name: service-scgateway
    build:
      context: ./containerized-scgateway
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - HOST_NAME=scgateway
      - PORT=5000
      - DISCOVERY=http://discovery1:3001/eureka/,http://discovery2:3002/eureka/
      - JAEGER_HTTP_URL=http://jaeger:14268/api/traces

  api1:
    image: tasiraki77/service-accounts-api
    container_name: service-api1
    build:
      context: ./containerized-accounts
      dockerfile: Dockerfile
    ports:
      - "9001:9001"
    environment:
      - INSTANCE_ID=instance-api1
      - HOST_NAME=api1
      - PORT=9001
      - DISCOVERY=http://discovery1:3001/eureka/,http://discovery2:3002/eureka/
      - JAEGER_HTTP_URL=http://jaeger:14268/api/traces
#      - OPTS_ARGS=--eureka.client.enabled=false
    networks:
      - default

  api2:
    image: tasiraki77/service-accounts-api
    container_name: service-api2
    ports:
      - "9002:9002"
    environment:
      - INSTANCE_ID=instance-api2
      - HOST_NAME=api2
      - PORT=9002
      - DISCOVERY=http://discovery1:3001/eureka/,http://discovery2:3002/eureka/
      - JAEGER_HTTP_URL=https://jaeger:14268/api/traces
    networks:
      - default

  be1:
    image: tasiraki77/backend-api
    container_name: be1
    build:
      context: ./be
      dockerfile: Dockerfile.jvm
    ports:
      - "9011:9011"
    environment:
      - HOST_NAME=be1
      - PORT=9011
      - DISCOVERY1=http://discovery1:3001/eureka/
      - DISCOVERY2=http://discovery2:3002/eureka/
      - JAEGER_HOST=jaeger
    networks:
      - default

  be2:
    image: tasiraki77/backend-api
    container_name: be2
    ports:
      - "9012:9012"
    environment:
      - HOST_NAME=be2
      - PORT=9012
      - DISCOVERY1=http://discovery1:3001/eureka/
      - DISCOVERY2=http://discovery2:3002/eureka/
      - JAEGER_HOST=jaeger
    networks:
      - default

  db:
    image: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgresql/init:/docker-entrypoint-initdb.d

  adminer:
    image: michalhosna/adminer
    ports:
      - 8000:8080
    restart: always
    environment:
      - ADMINER_DRIVER=pgsql
      - ADMINER_SERVER=db
      - ADMINER_DB=db
      - ADMINER_USERNAME=postgres
      - ADMINER_PASSWORD=postgres
#      - ADMINER_AUTOLOGIN=1
      - ADMINER_NAME=ADMINER for PostgreSQL DB

  jaeger:
    image: jaegertracing/all-in-one
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 9411:9411

volumes:
  pgdata:

networks:
  default:
